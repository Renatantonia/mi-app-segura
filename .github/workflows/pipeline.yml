name: Pipeline DevSecOps Completo

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  seguridad:
    name: Análisis de Seguridad
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1. CodeQL (Análisis estático)
      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-and-quality

      - name: Ejecutar CodeQL
        uses: github/codeql-action/analyze@v2

      # 2. npm audit (Auditoría NPM)
      - name: Auditoría NPM
        run: |
          cd backend && npm audit
          cd ../frontend && npm audit || true

  construir:
    name: Build y Escaneo
    runs-on: ubuntu-latest
    needs: seguridad

    steps:
      - uses: actions/checkout@v4

      # 1. Construir imágenes Docker
      - name: Construir Backend
        run: docker build -t miapp-backend ./backend

      - name: Construir Frontend
        run: docker build -t miapp-frontend ./frontend

      # 2. Escaneo con Trivy (¡Nuevo!)
      - name: Escanear imágenes con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'miapp-backend,miapp-frontend'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'  # No falla el pipeline si encuentra vulnerabilidades
          output: 'trivy-results.txt'

      - name: Subir reporte de Trivy
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-results.txt

      # 3. Pruebas de funcionamiento
      - name: Probar Backend
        run: |
          docker run -d -p 3001:3001 --name backend miapp-backend
          sleep 10
          curl -f http://localhost:3001/api/healthcheck || (docker logs backend && exit 1)
          docker stop backend && docker rm backend

      - name: Probar Frontend
        run: |
          docker run -d -p 3000:3000 --name frontend miapp-frontend
          sleep 15
          curl -f http://localhost:3000 || (docker logs frontend && exit 1)
          docker stop frontend && docker rm frontend